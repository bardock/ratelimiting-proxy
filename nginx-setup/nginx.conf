worker_processes  1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {
    lua_socket_log_errors off;

    # Init
    include init.bans.conf;

    server {
        listen 8080;

        # Endpoints for debugging
        include location.debug.index.conf;
        include location.debug.redis.conf;
        include location.debug.bans.conf;

        # Proxy
        location / {

            access_by_lua_block {
                local bans = require "bans"
                local cjson = require "cjson"

                local ban = bans.find(ngx.var.remote_addr, ngx.var.request_uri)
                if ban then
                    ngx.status = ngx.HTTP_FORBIDDEN
                    ngx.say(cjson.encode(ban))
                    ngx.exit(ngx.HTTP_OK)
                    return
                end

                -- send request info to kinesis stream for control
            }
            
            proxy_pass http://localhost:8081/;

            log_by_lua_block {
                -- send request and response info to kinesis stream for stats
            }
        }
    }
}